//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class JSON2Apex {
    public static void consumeObject(JSONParser parser) {
        Integer depth = 0;
        do {
            JSONToken curr = parser.getCurrentToken();
            if (curr == JSONToken.START_OBJECT || 
                curr == JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == JSONToken.END_OBJECT ||
                curr == JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }
    
    
    public void insertJobDetails(){
        Jenkins_Job__c jenkinJobDetails = new Jenkins_Job__c();
        Build build = new Build();
        scm scm = new scm();
        
        jenkinJobDetails.name = name;
        jenkinJobDetails.Job_Name__c = name;
        jenkinJobDetails.Job_URL__c = url;
        jenkinJobDetails.Build_Number__c = build.number_Z;
        jenkinJobDetails.Git_Branch__c = scm.branch;
        jenkinJobDetails.Git_Commit_Id__c = scm.commit_Z;
        jenkinJobDetails.Phase__c = build.phase;
        jenkinJobDetails.queue_id__c = build.queue_id;
        jenkinJobDetails.scm__c = scm.url;
        jenkinJobDetails.Status__c = build.status;
        
        insert jenkinJobDetails;
        System.debug('Job details****'+jenkinJobDetails);
    }
    
    
    public class Artifacts {

        public Artifacts(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        {
                            System.debug(LoggingLevel.WARN, 'Artifacts consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public String name {get;set;} 
    public String url {get;set;} 
    public Build build {get;set;} 

    public JSON2Apex(JSONParser parser) {
        while (parser.nextToken() != JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != JSONToken.VALUE_NULL) {
                    if (text == 'name') {
                        name = parser.getText();
                    } else if (text == 'url') {
                        url = parser.getText();
                    } else if (text == 'build') {
                        build = new Build(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Build {
        public String full_url {get;set;} 
        public Integer number_Z {get;set;} // in json: number
        public Integer queue_id {get;set;} 
        public String phase {get;set;} 
        public String status {get;set;} 
        public String url {get;set;} 
        public Scm scm {get;set;} 
        public String log {get;set;} 
        public Artifacts artifacts {get;set;} 
        
        public Build(){}
        public Build(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'full_url') {
                            full_url = parser.getText();
                        } else if (text == 'number') {
                            number_Z = parser.getIntegerValue();
                        } else if (text == 'queue_id') {
                            queue_id = parser.getIntegerValue();
                        } else if (text == 'phase') {
                            phase = parser.getText();
                        } else if (text == 'status') {
                            status = parser.getText();
                        } else if (text == 'url') {
                            url = parser.getText();
                        } else if (text == 'scm') {
                            scm = new Scm(parser);
                        } else if (text == 'log') {
                            log = parser.getText();
                        } else if (text == 'artifacts') {
                            artifacts = new Artifacts(parser);
                        } else {
                            System.debug(LoggingLevel.WARN, 'Build consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Scm {
        public String url {get;set;} 
        public String branch {get;set;} 
        public String commit_Z {get;set;} // in json: commit
        
        public Scm(){}
        public Scm(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'url') {
                            url = parser.getText();
                        } else if (text == 'branch') {
                            branch = parser.getText();
                        } else if (text == 'commit') {
                            commit_Z = parser.getText();
                            System.debug('Job commit_Z****'+commit_Z);
                        } else {
                            System.debug(LoggingLevel.WARN, 'Scm consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static JSON2Apex parse(String json) {
        return new JSON2Apex(System.JSON.createParser(json));
    }
}